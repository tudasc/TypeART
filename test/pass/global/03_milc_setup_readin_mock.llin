; RUN: cat %s | %apply-typeart -typeart-global -S 2>&1 | %filecheck %s

; CHECK: call void @__typeart_alloc_global(i8* bitcast (%struct.params* @par_buf to i8*)

; ModuleID = 'setup.c'
source_filename = "setup.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.params = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32, float, float, float, i32, i32, i32, i32, i32, [256 x i8], [256 x i8] }
%struct.gauge_file = type { %struct._IO_FILE*, %struct.gauge_header*, i8*, i32, i32*, i32, %struct.gauge_check }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.gauge_header = type { i32, [64 x i8], [4 x i32], i32, i32 }
%struct.gauge_check = type { i32, i32 }

@this_node = external dso_local local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [6 x i8] c"warms\00", align 1
@par_buf = dso_local global %struct.params zeroinitializer, align 4
@.str.2 = private unnamed_addr constant [8 x i8] c"trajecs\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"traj_between_meas\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"mass\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"u0\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"microcanonical_time_step\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"steps_per_trajectory\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"max_cg_iterations\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"error_per_site\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"error_for_propagator\00", align 1
@warms = external dso_local local_unnamed_addr global i32, align 4
@trajecs = external dso_local local_unnamed_addr global i32, align 4
@steps = external dso_local local_unnamed_addr global i32, align 4
@propinterval = external dso_local local_unnamed_addr global i32, align 4
@niter = external dso_local local_unnamed_addr global i32, align 4
@rsqmin = external dso_local local_unnamed_addr global float, align 4
@rsqprop = external dso_local local_unnamed_addr global float, align 4
@epsilon = external dso_local local_unnamed_addr global float, align 4
@beta = external dso_local local_unnamed_addr global float, align 4
@mass = external dso_local local_unnamed_addr global float, align 4
@u0 = external dso_local local_unnamed_addr global float, align 4
@startflag = external dso_local local_unnamed_addr global i32, align 4
@saveflag = external dso_local local_unnamed_addr global i32, align 4
@startfile = external dso_local global [256 x i8], align 16
@savefile = external dso_local global [256 x i8], align 16
@startlat_p = external dso_local local_unnamed_addr global %struct.gauge_file*, align 8
@valid_longlinks = external dso_local local_unnamed_addr global i32, align 4
@valid_fatlinks = external dso_local local_unnamed_addr global i32, align 4
@phases_in = external dso_local local_unnamed_addr global i32, align 4
@gf = dso_local local_unnamed_addr global %struct.gauge_file* null, align 8
@str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @readin(i32 %0) local_unnamed_addr #0 {
  %2 = alloca float, align 4
  %3 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5
  %4 = load i32, i32* @this_node, align 4, !tbaa !2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %53

6:                                                ; preds = %1
  %7 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str, i64 0, i64 0))
  %8 = tail call i32 @get_i(i32 %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 7)) #5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %49

10:                                               ; preds = %6
  %11 = tail call i32 @get_i(i32 %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 8)) #5
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %49

13:                                               ; preds = %10
  %14 = tail call i32 @get_i(i32 %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 10)) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %49

16:                                               ; preds = %13
  %17 = tail call i32 @get_f(i32 %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 11)) #5
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %49

19:                                               ; preds = %16
  %20 = tail call i32 @get_f(i32 %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 12)) #5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %49

22:                                               ; preds = %19
  %23 = tail call i32 @get_f(i32 %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 13)) #5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %22
  %26 = tail call i32 @get_f(i32 %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 17)) #5
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %25
  %29 = tail call i32 @get_i(i32 %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 9)) #5
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %49

31:                                               ; preds = %28
  %32 = tail call i32 @get_i(i32 %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 14)) #5
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %49

34:                                               ; preds = %31
  %35 = call i32 @get_f(i32 %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), float* nonnull %2) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %34
  %38 = load float, float* %2, align 4, !tbaa !6
  %39 = fmul float %38, %38
  store float %39, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 15), align 4, !tbaa !8
  %40 = call i32 @get_f(i32 %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), float* nonnull %2) #5
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = load float, float* %2, align 4, !tbaa !6
  %44 = fmul float %43, %43
  store float %44, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 16), align 4, !tbaa !10
  %45 = call i32 @ask_starting_lattice(i32 %0, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 21), i8* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 23, i64 0)) #5
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = call i32 @ask_ending_lattice(i32 %0, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 22), i8* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 24, i64 0)) #5
  br label %49

49:                                               ; preds = %6, %10, %13, %16, %19, %22, %25, %28, %31, %34, %37, %47, %42
  %50 = phi i32 [ %48, %47 ], [ %45, %42 ], [ %40, %37 ], [ %35, %34 ], [ %32, %31 ], [ %29, %28 ], [ %26, %25 ], [ %23, %22 ], [ %20, %19 ], [ %17, %16 ], [ %14, %13 ], [ %11, %10 ], [ %8, %6 ]
  %51 = icmp sgt i32 %50, 0
  %52 = zext i1 %51 to i32
  store i32 %52, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 0), align 4, !tbaa !11
  br label %53

53:                                               ; preds = %49, %1
  call void @broadcast_bytes(i8* bitcast (%struct.params* @par_buf to i8*), i32 604) #5
  %54 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 0), align 4, !tbaa !11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @normal_exit(i32 0) #5
  br label %79

57:                                               ; preds = %53
  %58 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 7), align 4, !tbaa !12
  store i32 %58, i32* @warms, align 4, !tbaa !2
  %59 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 8), align 4, !tbaa !13
  store i32 %59, i32* @trajecs, align 4, !tbaa !2
  %60 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 9), align 4, !tbaa !14
  store i32 %60, i32* @steps, align 4, !tbaa !2
  %61 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 10), align 4, !tbaa !15
  store i32 %61, i32* @propinterval, align 4, !tbaa !2
  %62 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 14), align 4, !tbaa !16
  store i32 %62, i32* @niter, align 4, !tbaa !2
  %63 = load float, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 15), align 4, !tbaa !8
  store float %63, float* @rsqmin, align 4, !tbaa !6
  %64 = load float, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 16), align 4, !tbaa !10
  store float %64, float* @rsqprop, align 4, !tbaa !6
  %65 = load float, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 17), align 4, !tbaa !17
  store float %65, float* @epsilon, align 4, !tbaa !6
  %66 = load float, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 11), align 4, !tbaa !18
  store float %66, float* @beta, align 4, !tbaa !6
  %67 = load float, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 12), align 4, !tbaa !19
  store float %67, float* @mass, align 4, !tbaa !6
  %68 = load float, float* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 13), align 4, !tbaa !20
  store float %68, float* @u0, align 4, !tbaa !6
  %69 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 21), align 4, !tbaa !21
  store i32 %69, i32* @startflag, align 4, !tbaa !2
  %70 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 22), align 4, !tbaa !22
  store i32 %70, i32* @saveflag, align 4, !tbaa !2
  %71 = call i8* @strcpy(i8* nonnull dereferenceable(1) getelementptr inbounds ([256 x i8], [256 x i8]* @startfile, i64 0, i64 0), i8* nonnull dereferenceable(1) getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 23, i64 0))
  %72 = call i8* @strcpy(i8* nonnull dereferenceable(1) getelementptr inbounds ([256 x i8], [256 x i8]* @savefile, i64 0, i64 0), i8* nonnull dereferenceable(1) getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 24, i64 0))
  %73 = icmp eq i32 %69, 10
  br i1 %73, label %74, label %76

74:                                               ; preds = %57
  call void @rephase(i32 0) #5
  %75 = load i32, i32* @startflag, align 4, !tbaa !2
  br label %76

76:                                               ; preds = %74, %57
  %77 = phi i32 [ %75, %74 ], [ %69, %57 ]
  %78 = call %struct.gauge_file* @reload_lattice(i32 %77, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @startfile, i64 0, i64 0)) #5
  store %struct.gauge_file* %78, %struct.gauge_file** @startlat_p, align 8, !tbaa !23
  store i32 0, i32* @valid_longlinks, align 4, !tbaa !2
  store i32 0, i32* @valid_fatlinks, align 4, !tbaa !2
  store i32 0, i32* @phases_in, align 4, !tbaa !2
  call void @rephase(i32 1) #5
  call void (...) @make_loop_table() #5
  call void (...) @make_path_table() #5
  br label %79

79:                                               ; preds = %76, %56
  %80 = phi i32 [ -1, %56 ], [ 0, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5
  ret i32 %80
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local i32 @get_i(i32, i8*, i32*) local_unnamed_addr #2

declare dso_local i32 @get_f(i32, i8*, float*) local_unnamed_addr #2

declare dso_local i32 @ask_starting_lattice(i32, i32*, i8*) local_unnamed_addr #2

declare dso_local i32 @ask_ending_lattice(i32, i32*, i8*) local_unnamed_addr #2

declare dso_local void @broadcast_bytes(i8*, i32) local_unnamed_addr #2

declare dso_local void @normal_exit(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare dso_local i8* @strcpy(i8* noalias returned writeonly, i8* noalias nocapture readonly) local_unnamed_addr #3

declare dso_local void @rephase(i32) local_unnamed_addr #2

declare dso_local %struct.gauge_file* @reload_lattice(i32, i8*) local_unnamed_addr #2

declare dso_local void @make_loop_table(...) local_unnamed_addr #2

declare dso_local void @make_path_table(...) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture  readonly) local_unnamed_addr #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind willreturn "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.1"}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!7, !7, i64 0}
!7 = !{!"float", !4, i64 0}
!8 = !{!9, !7, i64 60}
!9 = !{!"", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !3, i64 56, !7, i64 60, !7, i64 64, !7, i64 68, !3, i64 72, !3, i64 76, !3, i64 80, !3, i64 84, !3, i64 88, !4, i64 92, !4, i64 348}
!10 = !{!9, !7, i64 64}
!11 = !{!9, !3, i64 0}
!12 = !{!9, !3, i64 28}
!13 = !{!9, !3, i64 32}
!14 = !{!9, !3, i64 36}
!15 = !{!9, !3, i64 40}
!16 = !{!9, !3, i64 56}
!17 = !{!9, !7, i64 68}
!18 = !{!9, !7, i64 44}
!19 = !{!9, !7, i64 48}
!20 = !{!9, !7, i64 52}
!21 = !{!9, !3, i64 84}
!22 = !{!9, !3, i64 88}
!23 = !{!24, !24, i64 0}
!24 = !{!"any pointer", !4, i64 0}
