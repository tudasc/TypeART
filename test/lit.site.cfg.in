@LIT_SITE_CFG_IN_HEADER@

import sys

# LLVM toolchain:
config.clang_cpp = "@TYPEART_CLANGCXX_EXEC@"
config.clang = "@TYPEART_CLANG_EXEC@"
config.opt = "@TYPEART_OPT_EXEC@"
config.opt_args = "@TYPEART_OPT_ARGS@"
config.llc = "@TYPEART_LLC_EXEC@"
config.filecheck = "@TYPEART_FILECHECK_EXEC@"

config.typeart_base_lib_dir = "@TYPEARTPASS_BASE_LIBRARY_DIR@"
config.typeart_obj_root = "@TYPEARTPASS_BINARY_DIR@"
config.typeart_lib_dir = "@TYPEARTPASS_LIBRARY_DIR@"
config.typeart_rt_dir = "@TYPEARTPASS_RT_DIR@"
config.typeart_script_dir = "@TYPEARTPASS_SCRIPT_DIR@"
config.typeart_pass = "$<TARGET_FILE_NAME:typeart::TransformPass>"
config.typeart_types = "$<TARGET_FILE_NAME:typeart::Types>"
config.profile_file = "@TYPEARTPASS_PROFILE_FILE@"
config.softcounter_used = @TYPEARTPASS_SOFTCOUNTER@
config.openmp_used = @TYPEARTPASS_OPENMP@
config.openmp_c_flags = "@OpenMP_C_FLAGS@"
# config.openmp_c_inc_dir = "@OpenMP_C_INCLUDE_DIRS@"
config.openmp_cxx_flags = "@OpenMP_CXX_FLAGS@"
# config.openmp_cxx_inc_dir = "@OpenMP_CXX_INCLUDE_DIRS@"
config.threads_used=@TYPEARTPASS_THREADS@
config.thread_unsafe_mode=@TYPEARTPASS_THREAD_UNSAFE@
config.mpicc="@MPI_C_COMPILER@"
config.mpicxx="@MPI_CXX_COMPILER@"
config.mpicc_used=@TYPEARTPASS_MPI_C@
config.mpicxx_used=@TYPEARTPASS_MPI_CXX@
config.mpiexec="@MPIEXEC@"
config.tsan=@TYPEARTPASS_TSAN@
config.asan=@TYPEARTPASS_ASAN@
config.ubsan=@TYPEARTPASS_UBSAN@
config.coverage=@TYPEART_COVERAGE@

# Let the main config do the real work.
config.loaded_site_config = True
lit_config.load_config(config, "@TYPEARTPASS_PROJECT_DIR@/test/lit.cfg")
