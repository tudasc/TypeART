#!/bin/bash

target=$1
ta_more_args=${2:-""}
optimize=${3:-" "}

extension="${target##*.}"
tmpfile=${target##*/}

if [ $extension == "c" ]; then
  compiler=clang
else
  compiler=clang++
fi

if [ -e "types.yaml" ]; then
  rm "types.yaml"
fi

function make_no_optim() {
  # Order: heap and stack/global together, no optimization pass
  $compiler @TYPEART_INCLUDE_DIRS@ -O1 -Xclang -disable-llvm-passes -S -emit-llvm "$target" -o - | opt $typeart_plugin -typeart-alloca -typeart-stats $ta_more_args -S 2>&1
}

function make_with_optim() {
  # Order: heap, optimize, alloca with additional args..
  $compiler @TYPEART_INCLUDE_DIRS@ -O1 -Xclang -disable-llvm-passes -S -emit-llvm "$target" -o - | opt $typeart_plugin -typeart-stats | opt $optimize -S | opt $typeart_plugin -typeart-alloca -typeart-stats $ta_more_args -S 2>&1
}

function compile() {
  local typeart_plugin="-load @TYPEART_ANALYSIS_PASS_DIR@/@TYPEART_ANALYSIS_PLUGIN@ -load @TYPEART_PASS_DIR@/@TYPEART_PLUGIN@ -typeart"
  if [ "$optimize" == " " ]; then
    make_no_optim
  else
    make_with_optim
  fi
}

compile